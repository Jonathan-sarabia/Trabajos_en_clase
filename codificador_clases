--Ejercicio24
library IEEE;
use IEEE.std_logic_1164.all;
entity buf_tri_e is
port(OE: datain: in std_logic;
salida: buf_tri_e;
end decodificador;

architecture arq_buff of buf_tri_e is
begin
process(OE, datain) begin;
if OE ='0' then
salida <= 'Z';
else
salida <= datain;
end if;
end process;
end arq_buff;


--Ejercicio25
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity entydades is
    Port ( a,b : in  STD_LOGIC_VECTOR (3 downto 0);
           X,Y,Z : out  STD_LOGIC );
end entydades;

architecture Behavioral of entydades is

begin
process (a,b) begin
 if (a = b) then 
 x <= '1';y <= '0';z <= '0'; 
 elsif (a >  b) then
 x <= '0';y <= '1';z <= '0' ;else
 x <= '0';y <= '0'; z <= '1';
 end if;
end process; 
end Behavioral;




Ejercicio26
entity DecodificadorBCD is
    Port ( x : in  STD_LOGIC_VECTOR (3 downto 0);
           d0,d1,d2,d3,d4,d5,d6,d7,d8,d9 : out  STD_LOGIC );
end DecodificadorBCD;

architecture Behavioral of DecodificadorBCD is
begin
 process(x)
 begin 
  d0 <= '1';d1 <= '1';d2 <= '1';d3 <= '1';d4 <= '1';d5 <= '1';d6 <= '1';d7 <= '1';d8 <= '1';d9 <= '1';
  
  if(x = "0000") then
   d0 <= '0';
  elsif(x = "0001") then
   d1 <= '0';
  elsif(x = "0010") then
   d2 <= '0';
  elsif(x = "0011") then
   d3 <= '0';
  elsif(x = "0100") then
   d4 <= '0';
  elsif(x = "0101") then
   d5 <= '0';
  elsif(x = "0110") then
   d6 <= '0';
  elsif(x = "0111") then
   d7 <= '0';
  elsif(x = "1000") then
   d8 <= '0';
  else
   d9 <= '0';
  end if;
 end process; 
end Behavioral;




--Ejercicio27
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity codificador is
    Port ( a : in integer range 0 to 9;
     d : out std_logic_vector(0 to 3));
end codificador;

architecture cod of codificador is

begin
process (a)
begin
 If a = 0 then d <= "0000";
 elsif a = 1 then d <= "0001";
 elsif a = 2 then d <= "0010";
 elsif a = 3 then d <= "0011";
 elsif a = 4 then d <= "0100";
 elsif a = 5 then d <= "0101";
 elsif a = 6 then d <= "0110";
 elsif a = 7 then d <= "0111";
 elsif a = 8 then d <= "1000";
 else d <= "1001";
 end if;
end process;
end cod;








--Ejercicio28
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity codificador is
    Port ( a : in integer range 0 to 9;

     d : out std_logic_vector(0 to 3));
end codificador;


architecture cod of codificador is
begin
process (a)
begin

 If a = 0 then d <= "0000";

 elsif a = 1 then d <= "0001";

 elsif a = 2 then d <= "0010";

 elsif a = 3 then d <= "0011";

 elsif a = 4 then d <= "0100";

 elsif a = 5 then d <= "0101";

 elsif a = 6 then d <= "0110";

 elsif a = 7 then d <= "0111";

 elsif a = 8 then d <= "1000";

 else d <= "1001";
 end if;
end process;
end cod;




--Ejercicio29
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity codificador is
    Port ( A : in integer range 3 to 0;
           D : out std_logic_vector(6 to 0));
end codificador;

architecture cod of codificador is
begin
process (A)
begin
case A is 
 when"0000" => D <= "0000001";
 when"0001" => D <= "1001111";
 when"0010" => D <= "0010010";
 when"0011" => D <= "0000110";
 when"0101" => D <= "0100100";
 when"0110" => D <= "0100000";
 when"0111" => D <= "0001110";
 when"1000" => D <= "0000000";
 when"1001" => D <= "0000100";
 when others => D <= "1111111";
 end case;
end process;
end cod;




--Ejercicio30
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity codificador is
    Port ( a,b,c,d : in std_logic_vector(0 downto 2);
           z,s : out std_logic_vector (1  dowto0));
end codificador;

architecture cod of codificador is
begin
process (a,b,c,d,s,z)
begin
case s is
    when '00' = z <= a<='00'
    when '01' = z <= b 
    when '10' = z <= c    
    when '11' = z <= d
end process;
end cod;
