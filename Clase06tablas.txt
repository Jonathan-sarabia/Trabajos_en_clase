--ejemplo tabla  16
--X = ABC + ÁBC + ÀBC + ABC 
--Y = ÁBC + ABC + ABC 
--Z = ÁBC + ABC + ÁBC
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity tabajo12 is
    Port ( a,b,c : in  STD_LOGIC;
           x,y,z : out  STD_LOGIC);
end tabajo12;

architecture ejemplo of tabajo12 is

begin
X <= (not A and not B and not C) or (not A and not B and C) 
or (not a and B and C ) or (A and B and C) ; 
Y <= (not A and not B and C) or (A and not B and C) 
or (A and B and not C) ; 
Z <= (not A and not B and not C) or (not A and B and not C) 
or (not A and B and C) ;
end ejemplo;




-- Sumador   17
library IEEE;
use IEEE.std_logic_1164.all;
entity sumador is port(A, B: in std_logic_vector (0 to 3);
S: out std_logic_vector (0 to 3);
Cout: out std_logic;
end sumador;
architecture sumar of sumador is
signal C: stf_logic_vetor (0 to 2);
begin
S(0) <= A(0) xor B(0);
C(0) <= A(0) and B(0);
S(1) <= (A(1) xor B(1) xor C(0));
C(1) <= (A(1) and B(1)) or (C(0) and (A(1) xor B(1)));
S(2) <= (A(2) xor B(2) xor C(1));
C(2) <= (A(2) and B(2)  or (C(1) and (A(2) xor B(2)));
S(3) <= (A(3) xor B(3) xor C(2));
Cout <= (A(3) and B(3)) or (C2) and (A(3) xor B(3)));
end sumar;



--concurrente condicional: when else 18
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
ENTITY condicional IS
PORT (A,B,C: IN STD_LOGIC; F: OUT STD_LOGIC);
END condicional;
ARCHITECTURE condicionales OF condicional IS
BEGIN
F <= '1' WHEN (A='0' AND B='0' AND C='0') ELSE
'1' WHEN (A='0' AND B='1' AND C='1') ELSE
'1' WHEN (A='1' AND B='1' AND C='0') ELSE
'1' WHEN (A='1' AND B='1' AND C='1')ELSE '0';
END condicionales;






--mux ejericicio 19
ENTITY mux_1 IS
PORT (E0,E1,E2,E3 IN STD_LOGIC; 
SELA, SELB, SELC: IN STD_LOGIC; 
F: OUT STD_LOGIC);
END mux_1;
ARCHITECTURE ejemplo OF mux_1 IS
BEGIN
F <= E3 WHEN SELC='1' ELSE
E2 WHEN SELB='1' ELSE
E1 WHEN SELA='1' ELSE
E0;
END ejemplo;




--segmento de 20
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
ENTITY segmento IS
PORT(DEC: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
SEG: OUT STS_LOGIC_VECTOR(6 DOWNTO 0);
END segmento;
ARCHITECTURE ejemplo OF segmento IS
BEGIN
WITH DEC SELECT

--- ADBCDEFG
SEG <= '0000001' WHEN '0000'
'1001111' WHEN '0001'
'0010010' WHEN '0010'
'0000110' WHEN '0011'
'1001100' WHEN '0100'
'0100100' WHEN '0101'
'1100000' WHEN '0110'
'0001110' WHEN '0111'
'0000000' WHEN '1000'
'0000100' WHEN '1001'
END ejemplo;
