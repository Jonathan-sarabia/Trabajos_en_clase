--Ejemplos de Vectores


--Ejercicio05
entity ejericio01 is
port (A,B, : in bit_vector (3 downto 0);  
C: inout bit_vector(3 downto 0); 
S: out bit_vector (3 downto 0));
end ejericicio01;




--Ejercicio06
entity ejericicio02 is
port (Q: in bit_vector (3 downto 0); 
F: out bit_vector (0 to 7));
end ejercicio02;




--Ejercicio07
--Se declara la libreria
library ieee;
--Para usar paquetes >>use nombre_libreria.nombrepaquete.all;
use ieee.std_logic_1164.all;

entity ejercicio03 is
port (X: in std_logic_vector(1 downto 0); 
A,B: in std_logic; 
Z: out std_logic_vector(0 to 3));
end ejericico03;



--Ejercico de un Sumador 08
Library ieee;
use ieee.std_logic_1164.all;
use work.std_arith.all;
entity Sumador is
port(
 A, B: in std_logic_vector(0 to 1);
    SUMA: out std_logic_vector(0 to 1);
);
end Sumador;



--Ejericio09 > Ejemplo con el estilo de flujo de datos
library ieee;
use ieee.std_logic_1164.all;

entity ejercicio04 is
port (A,B: in std_logic; 
F0, F1 : out std_logic);
end ejericio04;

architecture fluj of ejemplor is
begin
	F0 <= '1' when (A='0' and B='0') else
    	  '1' when  (A='0' and B='1') else
          '0';
       F1 <= '0' when (A='1' and B='1') else
    		'1';
end fluj;



--Ejercicio10 Compuerta AND
library IEEE;
use IEEE.std_logic_1164.all;
entity compuerta is
port (A, B : in std_logic;
F: out in std_logic );
end compuerta;
architecture AND of compuerta is
begin 
F <= '1' when (A = '1' and B = '1') 
else'0'
end AND;




--- Ejerciio11 estilo funcional ejercici 10
library ieee;
use ieee.std_logic_1164.all;

entity efuncional is
port (A,B: in std_logic; 
c : out std_logic);
end efuncional;

architecture proceso of efuncional is
begin
process(A,B)
begin
  if A = B then
    c<='1';
  else c<='0';
    end if;
end process;
end proceso;



--Ejercicio de estilo Estructural14
library ieee;
use ieee.std_logic_1164.all;

entity composicion is
port (A,B,C: in std_logic; F : out std_logic);
end composicion;

use work.gates.all;

architecture estructural of composicion is
signal x: bit_vector(0 to 2);
begin
U0: and2 port map (B,C, x(0));

U1: and2 port map (C,A, x(1));

U2: and2 port map (A,B, x(2));

U3: or3 port map (x(0), x(1), x(2),F);
end estructural;




--compuerta or ejercicio 13
 library IEEE;
use IEEE.std_logic_ll64.all;
entity ejercicioor is
port(
A,B: IN std_logic;
C: out std_logic);
end ejercicio;
architecture ord of ejercicioor is
begin 
process(A,B)
begin
if A = 1 or B= 1 or C=1 then
C <= '1';
else C<='0';
end if;
en process;
end ord;



